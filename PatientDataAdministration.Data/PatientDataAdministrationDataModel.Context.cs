//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace PatientDataAdministration.Data
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class Entities : DbContext
    {
        public Entities()
            : base("name=Entities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<Administration_ClientMap> Administration_ClientMap { get; set; }
        public virtual DbSet<Administration_ClientRegistry> Administration_ClientRegistry { get; set; }
        public virtual DbSet<Administration_MessagingPatientComplaint> Administration_MessagingPatientComplaint { get; set; }
        public virtual DbSet<Administration_PatientRegistrationLog> Administration_PatientRegistrationLog { get; set; }
        public virtual DbSet<Administration_SiteInformation> Administration_SiteInformation { get; set; }
        public virtual DbSet<Administration_StaffInformation> Administration_StaffInformation { get; set; }
        public virtual DbSet<Integration_AppointmentDataManifest> Integration_AppointmentDataManifest { get; set; }
        public virtual DbSet<Patient_PatientBiometricData> Patient_PatientBiometricData { get; set; }
        public virtual DbSet<Patient_PatientBiometricIntegrityCase> Patient_PatientBiometricIntegrityCase { get; set; }
        public virtual DbSet<Patient_PatientBiometricIntegrityCaseMember> Patient_PatientBiometricIntegrityCaseMember { get; set; }
        public virtual DbSet<Patient_PatientInformation> Patient_PatientInformation { get; set; }
        public virtual DbSet<Patient_PatientNearFieldCommunicationData> Patient_PatientNearFieldCommunicationData { get; set; }
        public virtual DbSet<Patient_PatientTransferHistory> Patient_PatientTransferHistory { get; set; }
        public virtual DbSet<System_ClientPulse> System_ClientPulse { get; set; }
        public virtual DbSet<System_DataIntegrityActionLog> System_DataIntegrityActionLog { get; set; }
        public virtual DbSet<System_LocalGovermentArea> System_LocalGovermentArea { get; set; }
        public virtual DbSet<System_NotificationLog> System_NotificationLog { get; set; }
        public virtual DbSet<System_OperationLog> System_OperationLog { get; set; }
        public virtual DbSet<System_ReportingLog> System_ReportingLog { get; set; }
        public virtual DbSet<System_State> System_State { get; set; }
        public virtual DbSet<System_Update> System_Update { get; set; }
        public virtual DbSet<Patient_PatientBiometricDataPopulationRegister> Patient_PatientBiometricDataPopulationRegister { get; set; }
        public virtual DbSet<Patient_PatientInformationPopulationRegister> Patient_PatientInformationPopulationRegister { get; set; }
        public virtual DbSet<Integration_AppointmentDataItem> Integration_AppointmentDataItem { get; set; }
        public virtual DbSet<System_AuditTrail> System_AuditTrail { get; set; }
    
        public virtual ObjectResult<Sp_Administration_GetAgeDistro_Result> Sp_Administration_GetAgeDistro()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_Administration_GetAgeDistro_Result>("Sp_Administration_GetAgeDistro");
        }
    
        public virtual ObjectResult<string> Sp_Administration_GetPatientCompliance()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("Sp_Administration_GetPatientCompliance");
        }
    
        public virtual ObjectResult<Sp_Administration_GetPatients_Result> Sp_Administration_GetPatients(string query, Nullable<int> stateId, Nullable<int> siteId, Nullable<bool> hasBio, Nullable<bool> hasNfc)
        {
            var queryParameter = query != null ?
                new ObjectParameter("query", query) :
                new ObjectParameter("query", typeof(string));
    
            var stateIdParameter = stateId.HasValue ?
                new ObjectParameter("stateId", stateId) :
                new ObjectParameter("stateId", typeof(int));
    
            var siteIdParameter = siteId.HasValue ?
                new ObjectParameter("siteId", siteId) :
                new ObjectParameter("siteId", typeof(int));
    
            var hasBioParameter = hasBio.HasValue ?
                new ObjectParameter("hasBio", hasBio) :
                new ObjectParameter("hasBio", typeof(bool));
    
            var hasNfcParameter = hasNfc.HasValue ?
                new ObjectParameter("hasNfc", hasNfc) :
                new ObjectParameter("hasNfc", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_Administration_GetPatients_Result>("Sp_Administration_GetPatients", queryParameter, stateIdParameter, siteIdParameter, hasBioParameter, hasNfcParameter);
        }
    
        public virtual int Sp_System_CleanUp()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Sp_System_CleanUp");
        }
    
        public virtual ObjectResult<Sp_System_DataIntegrity_Opr_CreateNew_Result> Sp_System_DataIntegrity_Opr_CreateNew(Nullable<int> rowId)
        {
            var rowIdParameter = rowId.HasValue ?
                new ObjectParameter("rowId", rowId) :
                new ObjectParameter("rowId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_System_DataIntegrity_Opr_CreateNew_Result>("Sp_System_DataIntegrity_Opr_CreateNew", rowIdParameter);
        }
    
        public virtual ObjectResult<Sp_System_DataIntegrity_Opr_Delete_Result> Sp_System_DataIntegrity_Opr_Delete(Nullable<int> rowId)
        {
            var rowIdParameter = rowId.HasValue ?
                new ObjectParameter("rowId", rowId) :
                new ObjectParameter("rowId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_System_DataIntegrity_Opr_Delete_Result>("Sp_System_DataIntegrity_Opr_Delete", rowIdParameter);
        }
    
        public virtual ObjectResult<Sp_System_DataIntegrity_Opr_Preffered_Result> Sp_System_DataIntegrity_Opr_Preffered(Nullable<int> rowId)
        {
            var rowIdParameter = rowId.HasValue ?
                new ObjectParameter("rowId", rowId) :
                new ObjectParameter("rowId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_System_DataIntegrity_Opr_Preffered_Result>("Sp_System_DataIntegrity_Opr_Preffered", rowIdParameter);
        }
    
        public virtual ObjectResult<Sp_System_DataIntegrity_PepId_Result> Sp_System_DataIntegrity_PepId()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_System_DataIntegrity_PepId_Result>("Sp_System_DataIntegrity_PepId");
        }
    
        public virtual ObjectResult<Sp_System_Indicators_PopulationDistro_30DayStatePlotData_Result> Sp_System_Indicators_PopulationDistro_30DayStatePlotData(string abbreviation)
        {
            var abbreviationParameter = abbreviation != null ?
                new ObjectParameter("abbreviation", abbreviation) :
                new ObjectParameter("abbreviation", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_System_Indicators_PopulationDistro_30DayStatePlotData_Result>("Sp_System_Indicators_PopulationDistro_30DayStatePlotData", abbreviationParameter);
        }
    
        public virtual ObjectResult<Sp_System_Indicators_PopulationDistro_BioCount_Result> Sp_System_Indicators_PopulationDistro_BioCount(string abbrevation)
        {
            var abbrevationParameter = abbrevation != null ?
                new ObjectParameter("abbrevation", abbrevation) :
                new ObjectParameter("abbrevation", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_System_Indicators_PopulationDistro_BioCount_Result>("Sp_System_Indicators_PopulationDistro_BioCount", abbrevationParameter);
        }
    
        public virtual ObjectResult<Sp_System_Indicators_PopulationDistro_NfcCount_Result> Sp_System_Indicators_PopulationDistro_NfcCount(string abbrevation)
        {
            var abbrevationParameter = abbrevation != null ?
                new ObjectParameter("abbrevation", abbrevation) :
                new ObjectParameter("abbrevation", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_System_Indicators_PopulationDistro_NfcCount_Result>("Sp_System_Indicators_PopulationDistro_NfcCount", abbrevationParameter);
        }
    
        public virtual ObjectResult<Sp_System_Reporting_PopulationDataSite_Result> Sp_System_Reporting_PopulationDataSite(Nullable<int> siteId, Nullable<System.DateTime> lowerDate, Nullable<System.DateTime> upperDate)
        {
            var siteIdParameter = siteId.HasValue ?
                new ObjectParameter("siteId", siteId) :
                new ObjectParameter("siteId", typeof(int));
    
            var lowerDateParameter = lowerDate.HasValue ?
                new ObjectParameter("lowerDate", lowerDate) :
                new ObjectParameter("lowerDate", typeof(System.DateTime));
    
            var upperDateParameter = upperDate.HasValue ?
                new ObjectParameter("upperDate", upperDate) :
                new ObjectParameter("upperDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_System_Reporting_PopulationDataSite_Result>("Sp_System_Reporting_PopulationDataSite", siteIdParameter, lowerDateParameter, upperDateParameter);
        }
    
        public virtual ObjectResult<Sp_System_Indicators_PopulationDistro_SexSiteState_Result> Sp_System_Indicators_PopulationDistro_SexSiteState(Nullable<System.DateTime> fromDate, Nullable<System.DateTime> toDate)
        {
            var fromDateParameter = fromDate.HasValue ?
                new ObjectParameter("fromDate", fromDate) :
                new ObjectParameter("fromDate", typeof(System.DateTime));
    
            var toDateParameter = toDate.HasValue ?
                new ObjectParameter("toDate", toDate) :
                new ObjectParameter("toDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_System_Indicators_PopulationDistro_SexSiteState_Result>("Sp_System_Indicators_PopulationDistro_SexSiteState", fromDateParameter, toDateParameter);
        }
    }
}
